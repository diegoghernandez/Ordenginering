---
import { ImgContainer } from '@/components/common/ImgContainer'
import { PizzaData, type PizzaDataTraduction } from '@/components/customize/PizzaData'
import { PizzaIngredients, type PizzaIngredientTraduction } from '@/components/customize/PizzaIngredients'
import { IMAGE_CDN } from '@/constants/imageCDN'
import { MAIN__TAG__ANIMATION__NAME } from '@/constants/viewTransitions'
import pizzaList from '@/data/pizza.json'
import Layout from '@/layouts/Layout.astro'
import { getAllIngredients } from '@/services/ingredientsService'
import type { SeoTraduction } from '@/types'
import { compareStringsOfNames } from '@/utils/compareStringsOfNames'
import { Image } from 'astro:assets'

interface Props {
   pizza: string
   t: {
		seo: SeoTraduction
      pizzaData: PizzaDataTraduction
		pizzaIngredients: PizzaIngredientTraduction
   }
}

const { pizza, t } = Astro.props

const getDefaultName = (name: String) => name.charAt(0).toUpperCase() + name.slice(1).replace('-', ' ')

const getIngredients = pizzaList
	.filter(({ name }) => compareStringsOfNames(pizza, name))
	.flatMap(({ ingredients }) => ingredients)

const getAuhor = pizza !== 'empty' ? 
	pizzaList.filter(({ name }) => compareStringsOfNames(name, pizza)).map(({ image }) => image.author)[0]
	: "Mariusz Słoński's photo on Unsplash"

const ingredients = await getAllIngredients()
---

<Layout 
	title={t.seo.title}
	description={t.seo.description}
	activeLink='Customize'
>
	<main transition:name={MAIN__TAG__ANIMATION__NAME}>
		<div>
			<ImgContainer styleClass='pizza-image' figcaptionText={getAuhor}>
				<Image 
					class='pizza-custom' 
					src={`${IMAGE_CDN}/pizza/${pizza}.avif`}
					alt={`${getDefaultName(pizza)} pizza`}
					width='320'
					height='260'
					decoding='sync'
					loading='eager'
				/>
			</ImgContainer>
			<PizzaData 
				client:load
				pizza={{
               pizzaName: pizza,
					pizzaImageName: pizza + '--small',
					pizzaImageAuthor: getAuhor
				}}
            prebuildIngredients={getIngredients}
            t={t.pizzaData}
				localForModalLinks={Astro.currentLocale ?? 'en'}
			/>
		</div>
		<div>
			<PizzaIngredients 
            client:idle 
            prebuildIngredients={getIngredients} 
            ingredientList={ingredients} 
            t={t.pizzaIngredients}
         />
		</div>
	</main>
</Layout>

<style is:global>
	.pizza-image {
		height: 224px;
	}
</style>

<style>
	main {
		display: flex;
		width: 100%;
		flex-direction: column;
		justify-content: center;
		align-items: center;
		gap: 16px;
		padding: 16px;
		&> div {
			width: 100%;
			&:first-of-type {
				display: flex;
				flex-direction: column;
				width: 100%;
				max-width: 480px;
				gap: 16px;
			}
		}
		@media (width > 720px) {
			display: flex;
			flex-direction: row;
			justify-content: start;
			align-items: start;
			max-height: calc(100svh - 56px );
			overflow: hidden;
			&> div:first-of-type {
				max-width: 360px;
			}
		}
	}
</style>
