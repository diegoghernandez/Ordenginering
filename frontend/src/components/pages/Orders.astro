---
import LinksContainer from '@/components/customer/LinksContainer.astro'
import { ShowPastOrders, type ShowPastOrdersTraduction } from '@/components/pastOrders/ShowPastOrders'
import { MAIN__TAG__ANIMATION__NAME } from '@/constants/viewTransitions'
import Layout from '@/layouts/Layout.astro'
import { getRoles } from '@/services/server/jwtServer'
import { getOrdersByAccount } from '@/services/server/orderServer'
import type { CustomerRole, PageOrder, SeoTraduction } from '@/types'
import { getProfileLinks } from '@/utils/getProfileLinks'

interface Props {
   customerRole: CustomerRole
   t: {
      seo: SeoTraduction
      titleError: string
      showPastOrdersTraduction: ShowPastOrdersTraduction
   }
}

const { customerRole, t } = Astro.props
const { slug } = Astro.params

let orders: PageOrder | null

try {
   orders = await getOrdersByAccount(Number(slug?.split('/')[0]), Astro.cookies.get('jwt')?.value, 0)
} catch (error) {   
   console.error(error);
   orders = null
}
---

<Layout 
   title={t.seo.title}
   description={t.seo.description}
	activeLink='Account'
>
   <main transition:name={MAIN__TAG__ANIMATION__NAME}>
      <LinksContainer links={getProfileLinks({
         customerId: customerRole.id,
         desireTranslation: Astro.currentLocale,
         role: customerRole.role, 
         active: 'ORDER'
      })} />
      {orders !== null ?
         <ShowPastOrders
            client:load
            id={Number(slug?.split('/')[0])}
            initialData={{
               content: [orders?.content],
               pageNumber: orders?.pageable.pageNumber,
               last: orders?.last
            }}
            t={t.showPastOrdersTraduction}
         /> :
         <h1>{t.titleError}</h1>
      }
   </main>
</Layout>

<style>
   main {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      gap: 16px;
      padding: 16px;
   }
</style>