---
import verifyTranslation from "@/assets/i18n/pages/Verify.json"
import { VerifyForm } from "@/components/security/VerifyForm"
import { PRIMARY__BUTTON } from "@/lib/constants/styles"
import Layout from "@/layouts/Layout.astro"
import type { LocalesString, TokenStatus } from "@/types"
import { getRelativeLocaleUrl } from "astro:i18n"

interface Props {
   locale: LocalesString
   tokenStatus: TokenStatus
}

const { locale, tokenStatus } = Astro.props
const t = verifyTranslation[locale]

---

<Layout
   title={t.seo.title}
   description={t.seo.description}
   activeLink=""
>
   <main>
      {(() => {
         switch (tokenStatus) {
            case 'SUCCESSFUL':
               return (
                  <>
                     <h2>{t.token.SUCCESSFUL}</h2>
                     <a href={getRelativeLocaleUrl(locale, 'login')} class={PRIMARY__BUTTON}>{t.login}</a>
                  </>
               )

            case 'EXPIRED':
               return (
                  <VerifyForm client:load t={{
                     token: t.token.EXPIRED,
                     resend: t.resend,
                     responses: t.responses
                  }} />
               )
            
            default:
               return null
         }
      })()}
   </main>
</Layout>

<script>
   document.addEventListener('astro:page-load', () => {
      const forms = document.querySelectorAll('form')

      for (const formElement of forms) {
         if (formElement instanceof HTMLFormElement) {
            formElement.addEventListener('submit', (event) => event.preventDefault())
         }
      }
   
   })
</script>

<style>
   main {
      display: grid;
      gap: 16px;
      max-width: 50ch;
      place-self: center;
      place-content: center;
   }
</style>