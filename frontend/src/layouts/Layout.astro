---
import Navbar from '@/components/nav/Navbar.astro'
import '@/styles/index.css'
import type { ActiveLink } from '@/types'
import { ViewTransitions } from 'astro:transitions'

interface Props {
	title: string
	description: string
	activeLink: ActiveLink
}


const { title, description, activeLink } = Astro.props
---

<!doctype html>
<html lang={Astro.currentLocale}>
	<head>
		<meta charset='UTF-8' />
		<meta name='viewport' content='width=device-width' />
		<title>{title}</title>
		<link rel='icon' type='image/svg+xml' href='/client/favicon.svg' />
		<meta name='description' content={description} />
		<meta name='generator' content={Astro.generator} />

		<meta property='og:url' content='https://ordeninginering.com/client'>
		<meta property='og:type' content='website'>
		<meta property='og:title' content={title}>
		<meta property='og:description' content={description}>
		<meta property='og:image' content='https://cdn.ordeninginering.com/image/menu-page.jpg'>

		<meta name='twitter:card' content='summary_large_image'>
		<meta property='twitter:domain' content='ordeninginering.com'>
		<meta property='twitter:url' content='https://ordeninginering.com/client'>
		<meta name='twitter:title' content={title}>
		<meta name='twitter:description' content={description}>
		<meta name='twitter:image' content='https://cdn.ordeninginering.com/image/menu-page.jpg'>

		<script is:inline>
			const desireLanguage = localStorage.getItem('language')
			if (!globalThis.location.pathname.includes('/' + desireLanguage) && desireLanguage) {
				const newPath = globalThis.location.pathname.replace(/\/e[n,s]/, '/' + desireLanguage)         
   			globalThis.location.assign(newPath)
			}	
		</script>

		<script is:inline>
			function applyTheme() {
				const htmlElement = document.querySelector('html')
				const theme = localStorage.getItem('theme') ?? ''
				if (htmlElement instanceof HTMLElement && theme) htmlElement.classList.add(theme)
			}
			document.addEventListener('astro:after-swap', applyTheme);
			applyTheme()
		</script>
		<ViewTransitions />
	</head>
	<body>
		<Navbar activeLink={activeLink} />
		<slot />
		<!-- <footer>
			{socialLinks.map((socialLink) => (
				<a href={socialLink.link}>
					{socialLink.name}
				</a>
			))}			
		</footer> -->
	</body>
</html>

<style is:global>
	body {
		& nav {
			display: flex;
			height: 56px;
			position: sticky;
			top: 0;
			z-index: 2;
			justify-content: space-between;
			padding: 16px 24px;
			background-color: var(--background);
			border-bottom: 1px solid var(--divider);

			& button, a {
				transition: color 350ms;
			}
		}
		& h1 {
			text-align: center;
			font-size: 3rem;
			font-weight: 400;
			line-height: 3.875rem;
			color: var(--primary-interaction);
		}
	}
</style>