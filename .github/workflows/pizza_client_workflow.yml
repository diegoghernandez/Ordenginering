name: Test and publish pizza client image

on:
   push:
      paths: [frontend/**, .github/workflows/pizza_client_workflow.yml, '!**.md', '!**.MD']
      branches:
         - main 

concurrency:
   group: ${{ github.workflow }}-${{ github.ref }}
   cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-22.04
    defaults:
        run:
          working-directory: frontend
    steps:
        - uses: actions/checkout@v4
          with:
            sparse-checkout: frontend
            fetch-depth: 0
        - uses: pnpm/action-setup@v3
          with:
            version: 9
        - uses: actions/setup-node@v4
          with:
            node-version: 20
            cache: 'pnpm'
            cache-dependency-path: frontend/pnpm-lock.yaml
        - name: Install dependencies
          run: pnpm install --frozen-lockfile
        - name: Test project
          run: pnpm run test

  e2e-playwright:
    runs-on: ubuntu-22.04
    defaults:
        run:
          working-directory: frontend
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]
        shardIndex: [1, 2]
        shardTotal: [2]
    steps:
        - uses: actions/checkout@v4
          with:
            sparse-checkout: frontend
            fetch-depth: 0
        - uses: pnpm/action-setup@v3
          with:
            version: 9
        - uses: actions/setup-node@v4
          with:
            node-version: 20
            cache: 'pnpm'
            cache-dependency-path: frontend/pnpm-lock.yaml
        - name: Install dependencies
          run: pnpm install --frozen-lockfile
        - name: Install Playwright Browsers
          run: pnpm exec playwright install --with-deps ${{ matrix.browser }}
        - name: Initialize express server
          run: pnpm run e2e-express &
        - name: Build application
          run: pnpm run build
        - name: Initialize e2e tests
          run: (pnpm run start &) && pnpm run e2e:ci --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }} --project=${{ matrix.browser }}

  build__and__deploy:
    needs: [test, e2e-playwright]
    runs-on: ubuntu-22.04
    defaults:
        run:
          working-directory: frontend
    steps:
        - uses: actions/checkout@v4
          with:
            sparse-checkout: frontend
            fetch-depth: 0
        - name: Build image
          run: docker build -t diegoj4v/pizza-client .
        - name: Login to Docker Hub
          uses: docker/login-action@v3
          with:
            username: diegoj4v
            password: ${{ secrets.DOCKERHUB_TOKEN }}
        - name: Push image to docker hub
          run: |
            docker tag diegoj4v/pizza-client diegoj4v/pizza-client:$(git rev-parse --short ${{ github.sha }})
            docker push diegoj4v/pizza-client:$(git rev-parse --short ${{ github.sha }})

  login__and__update__deployment: 
      needs: [build__and__deploy]
      runs-on: ubuntu-22.04
      permissions:
         id-token: write
         contents: read
      defaults:
         run:
            working-directory: k8s
      steps:
         - uses: actions/checkout@v4
           with:
            sparse-checkout: k8s
            fetch-depth: 0
         - id: 'auth'
           name: 'Obtain access token by using workload identity federation'
           uses: 'google-github-actions/auth@v2'
           with:
            workload_identity_provider: ${{ secrets.WIP }}
            service_account: ${{ secrets.SERVICE_EMAIL }}
         - name: Connect to GKE
           uses: google-github-actions/get-gke-credentials@v2
           with:
            cluster_name: pizza-cluster
            location: us-west2
         - name: Update deployment image
           run: kubectl set image deployment/pizza-client pizza-client=diegoj4v/pizza-client:$(git rev-parse --short ${{ github.sha }})